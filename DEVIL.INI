* strings start with '{' and end with '}'

Just run through this file and see what you can change without
devil exploding. The first values here should be save:

* Some editor startup values
:INITDATA 0     * init output (1=initio.c 2=readlvl.c/savetool.c)
{new}	        * startup level               
3               * starting showwhat
0.0 0.0 0.0     * starting point  (only if no level)
1.0 0.0 0.0     * orientation 1   (only if no level)
0.0 1.0 0.0     * orientation 2   (only if no level)
1.0             * zoom
1.05            * zoomscala
655360.0        * movefactor
131072.0        * pmovefactor
1.5             * movescala
0.19634954      * rotangle
0.19634954      * protangle
2.0             * rotscala
13107200.0      * maxvisibility
1.5             * visscala
0.5             * mousesensitivity
98304.0         * thingsize (first cube is 655360*655360*655360)
131072.0        * doorsize
0.01            * clickphi (angle of the magic beam of clicking)
0.00001         * mincorner
0.70            * minweirdwall
32768.0         * max. distance for automatic connect cubes
6553600.0	* max. distance for user connect.
65536.0         * gridlength
2.0             * gridscala
1               * gridonoff
4	     	* depth of grid
10              * number of macros for keys
773             * texture offset (630 for shareware)
191             * brightness for textures
4               * delay for movebuttons
{MACROS\\}      * path for macros (must be UPPERCASE and with \\ at the end)
{levels\\}      * path for levels
{..\\descent.pig} * filename of .pig file (remember: \\ for \)
{palette.256}     * color file

* now the eventcodes, that means what will happen if you do what on
* your keyboard / mouse?.
* first is the no of the event. see do_event.h
*
* second is the class of the event:
*  01 = left mouse button
*  02 = right mouse button
*  03 = keypressed
*
* third the special keys on the keyboard 
* here the program only looks if the given key is pressed, so you must
* place the same events with different special keys in the right order
* (means the one with the most special keys at the beginning)
*  01 = shift
*  02 = alt (reserved for menuline)
*  04 = ctrl
*  08 = num lock
*  00 = no matter
* fourth: the keys (normal ASCII-CODE (in hex)) for key events,
*  the buttonnumber for mouseevents in the lower menu. 
*  in the uppermenu the lower 8 bit of key gives the clicked line,
*  the higher 8 bit the menu in which the line was clicked.
*  current menu.
*  8 = backspace
*  9 = tab
*  1b = escape
*  110 = ALT+Q
*  11e = ALT+A
*  12c = ALT+Z
*  13b..144 = F1..F10
*  185 = F11
*  186 = F12
*  247 = home
*  248 = cursor up
*  249 = page up
*  24b = cursor left
*  24d = cursor right
*  24f = end
*  250 = cursor down
*  251 = page down
*  252 = insert
*  253 = delete
*  ffff = no matter
*  
* the last one is the no of the box in which the code
* will work:
*  0 is whole screen, 1 is plotbox, 2 is upper menu, 3 is lower menu,
*  4 is menuline and 5 is movebuttons
* only needed for mouse events.
:EVENTCODES 147
39 03 01 001b 0   {S+Esc: fast quit}
5d 03 00 001b 0   {Esc: quit}
31 02 01 0000 1   {click on wall}
01 01 00 0006 5   {change numlock}
01 01 00 0007 5   {change numlock}
01 01 00 0008 5   {change numlock}
02 02 00 0000 1   {click on cube}
03 01 00 0000 1   {click on thing}
35 03 00 013b 0   {F1: this help page}
30 03 05 0013 0   {^S: save level}
2f 03 05 000c 0   {^L: load level}
5a 03 00 024f 0   {End: set exit}
36 03 00 004d 0   {M: make macro}
37 03 04 000d 0   {^M: save macro} 
38 03 00 006d 0   {m: choose macro}
4f 03 00 0067 0   {g: incr. gridsize}
4e 03 01 0047 0   {G: decr. gridsize}
5f 00 05 0007 0   {^G: plot grid on/off}
4d 03 04 0007 0   {^g: grid on/off}
5b 03 01 0253 0   {S+Del: delete all}
4c 03 00 0253 0   {Del: delete something}
49 01 00 0001 2   {change data}
59 03 01 0252 0   {S+Ins: fast insert}
69 03 00 013c 0   {F2: scaled insert}
6a 03 01 0155 0   {S+F2: scaled, fast insert}
43 03 00 0252 0   {Ins: insert something}
53 03 00 013d 0   {F3: make room}
5e 03 00 0046 0   {F: align bitmaps}
42 03 00 0066 0   {f: fit bitmap}
34 03 00 0035 0   {N+5: beam to current obj}
54 03 05 0003 0   {^C: choose cube num}
55 03 05 0017 0   {^T: choose thing num}
56 03 05 0014 0   {^W: choose wall num}
5c 03 00 003c 0   {<: go to wall}
0c 03 01 0054 0   {T: prev thing}
0b 03 00 0074 0   {t: next thing}
0e 03 01 0043 0   {C: prev cube}
0d 03 00 0063 0   {c: next cube}
10 03 01 0053 0   {S: prev side}
0f 03 00 0073 0   {s: next side}
2c 03 01 0057 0   {W: prev wall}
2b 03 00 0077 0   {w: next wall}
41 03 01 0050 0   {P: prev point}
40 03 00 0070 0   {p: next point}
6b 03 00 0030 0   {0: side cube}
68 03 04 0020 0   {^space: tag special}
33 03 01 0020 0   {S+space: tag all}
11 03 00 0020 0   {space: tag}
1b 03 08 002a 0   {N+*: incr. movefactor}
1c 03 08 002f 0   {N+/: decr. movefactor}
4a 03 00 002a 0   {*: incr. pmovefactor}
4b 03 00 002f 0   {/: decr. pmovefactor}
29 03 08 0039 0   {N+9: inc. rot. angle}
2a 03 08 0037 0   {N+7: dec. rot. angle}
60 03 00 0149 0   {9: inc. p.rot. angle}
61 03 00 0147 0   {7: dec. p.rot. angle}
17 03 01 0041 0   {A: incr. visibility}
18 03 01 0059 0   {Y: decr. visibility}
18 03 01 005a 0   {Z: decr. visibility}
19 03 08 002b 0   {N++: incr. zoom}
1a 03 08 002d 0   {N+-: decr. zoom}
1d 03 08 0061 0   {a: move forward}
1d 02 08 0002 5   {move forward}
1d 03 08 014f 0   {S+N+3: move forward}
1e 03 08 0079 0   {y: move backward}
1e 03 08 007a 0   {z: move backward}
1e 02 08 0000 5   {move backward}
1e 03 08 0151 0   {S+N+1: move backward}
1f 03 09 014b 0   {S+N+4: slide left}
1f 02 08 0003 5   {slide left}
20 03 09 014d 0   {S+N+6: slide right}
20 02 08 0005 5   {slide right}
21 03 09 0148 0   {S+N+8: slide up}
21 02 08 0001 5   {slide up}
22 03 09 0150 0   {S+N+2: slide down}
22 02 08 0004 5   {slide down}
3f 03 00 0061 0   {a: move point forward}
3f 02 00 0002 5   {move point forward}  
3e 03 00 0079 0   {y: move point backward}
3e 03 00 0080 0   {z: move point backward}
3e 02 00 0000 5   {move point backward}  
3d 03 01 0034 0   {S+4: move point left}
3d 02 00 0003 5   {move point left}  
3c 03 01 0036 0   {S+6: move point right}
3c 02 00 0005 5   {move point right}  
3b 03 01 0038 0   {S+8: move point up}
3b 02 00 0001 5   {move point up}  
3a 03 01 0032 0   {S+2: move point down}
3a 02 00 0004 5   {move point down}  
6c 03 00 002b 0   {+: enlarge object}
6d 03 00 002d 0   {-: shrink object}
28 03 08 0034 0   {N+4: turn left}
28 01 08 0005 5   {turn left}  
26 03 08 0036 0   {N+6: turn right}
26 01 08 0003 5   {turn right}  
24 03 08 0038 0   {N+2: turn up}
24 01 08 0001 5   {turn up}  
27 03 08 0032 0   {N+8: turn down}
27 01 08 0004 5   {turn down}  
23 03 08 0031 0   {N+1: bank left}
23 01 08 0000 5   {bank left}  
25 03 08 0033 0   {N+3: bank right}
25 01 08 0002 5   {bank right}  
65 03 05 0018 0   {^X: align to -x}
62 03 04 0018 0   {^x: align to +x}
66 03 05 0019 0   {^Y: align to -y}
63 03 04 0019 0   {^y: align to +y}
67 03 05 001a 0   {^Z: align to -z}
64 03 04 001a 0   {^z: align to +z}
13 03 00 014b 0   {4: turn point left}
13 01 00 0005 5   {turn point left}  
14 03 00 014d 0   {6: turn point right}
14 01 00 0003 5   {turn point right}  
15 03 00 0150 0   {2: turn point up}
15 01 00 0001 5   {turn point up}  
16 03 00 0148 0   {8: turn point down}
16 01 00 0004 5   {turn point down}  
45 03 00 014f 0   {1: point bank left}
45 01 00 0000 5   {point bank left}  
46 03 00 0151 0   {3: point bank right}
46 01 00 0002 5   {point bank right}  
6e 03 00 013e 0   {F4: Re-Calculate txts}
07 01 00 0000 3   {cube menu}
07 03 04 0003 0   {C+c: cube menu}
2d 01 00 0001 3   {side menu}
2d 03 04 0013 0   {C+s: side menu}
2e 01 00 0002 3   {point menu}
2e 03 04 0010 0   {C+p: point menu}
0a 01 00 0003 3   {thing menu}
0a 03 04 0014 0   {C+t: thing menu}
09 01 00 0004 3   {wall menu}
09 03 04 0017 0   {C+w: wall menu}
08 01 00 0005 3   {internal menu}
08 03 04 0009 0   {C+i: internal menu}
50 01 00 0000 2   {change info value}
01 03 00 0009 0   {change mode}
50 03 00 000d 0   {Ret: change info value}   
58 01 05 0000 2   {change info value without all}
58 03 05 000d 0   {C+S+Ret: without all}
57 01 04 0000 2   {change info value without tagged objects}
57 03 04 000d 0   {C+Ret: without tagged}
44 01 01 0000 2   {change info value without side effects}
44 03 01 000d 0   {S+Ret: without side eff.}
48 03 00 0249 0   {Page up: scroll menu up}
47 03 00 0251 0   {Page down: scroll menu down}
51 03 00 0248 0   {up: move up in right menu}
52 03 00 0250 0   {down: move down in right menu}

* menuline
:MENUS 7
0 3 { >File }
 2f 0 {>load level}
 30 0 {>save level}
 5d 0 {>quit}
0 8 {>Move }
 34 0 {>beam to current object}
 4d 0 {>grid on/off}
 62 0 {align to pos. >x-axis} 
 63 0 {align to pos. >y-axis} 
 64 0 {align to pos. >z-axis} 
 65 0 {align to pos. >X-axis} 
 66 0 {align to pos. >Y-axis} 
 67 0 {align to pos. >Z-axis} 
0 10 {>Edit }
 43 0 {>insert}
 4c 0 {>Delete}
 5b 0 {delete >All}
 6c 0 {>enlarge}
 6d 0 {>shrink}
 42 0 {fit >bitmap}
 5e 0 {align >Bitmaps}
 53 0 {make >room}
 5a 0 {set e>xit}
 6e 0 {recalculate >textures}
0 6 {M>acros }
 36 0 {>make macro}
 37 0 {>save macro} 
 38 0 {>choose macro}
 59 0 {>fast insert}
 69 0 {>insert scaled}
 6a 0 {>Insert fast,scaled}
0 18 {>Select }
 11 0 {>tag}
 33 0 {>Tag all}
 68 0 {tag >special}
 54 0 {choose cub>e}
 55 0 {choose thin>g}
 56 0 {choose wal>l}
 5c 0 {>Go to wall}
 0d 0 {next >cube}
 0e 0 {previous >Cube}
 0b 0 {next >thing}
 0c 0 {previous >Thing}
 0f 0 {next >side}
 10 0 {previous >Side}
 2b 0 {next >wall}
 2c 0 {previous >Wall}
 40 0 {next >point}
 41 0 {previous >Point}
 6b 0 {c>hange to sidecube}
0 5 {>Drawing }
 04 0 {>things}
 05 0 {>cubes}
 06 0 {>lines}
 32 0 {>doors}
 12 0 {>Data}
0 2 {>Info }
 00 0 {>credits}
 35 0 {>help page}
 
* now the buttontexts
:BUTTONS 6
{Cube}
{Side}
{Point}
{Thing}
{Wall}
{Internal}

*** OK. Now the types of descent

* {formatstring} data offset length x y mlength nchild numtypedescrip class se
* formatstring: normal c-format string with one variable except if
*  numtypedescription<>0 then it's the title of the menu
* data,offset,length: structure, offset,length of variable 
* x,y,mlength: position and length in chars of formatstring 
*   (y is useless)
*   mlength=0: whole row
* nchild: number of entries with subentries.
* numtypedescription: number of type descriptions.
*  if negative then follows the names of the list recycled
* class: 0=changed by program
*        1=normal displayed and can be changed by the user
*        2=not changed by program or user but known
*  if negative then class=number of side effects
* se: side effect function number: number of function to be called
*  after altering the value (see do_side.c)
*
* type description:
*  number (in hex)   number of entries belonging to this type  {txt}
* number: number of descent
* number of...: number of following subtypes
* txt: description of number
*
* sideeffect:
* first lines: depth no offset item offset no ....
*  depth: Number of entries
*  no: no of list
*  offset: offset to write to
*  item: 
*
* further lines:
*  no {name} entry1 entry2 ...
:Cube 23 * number of all entries (all classes)
* menu entries (class=1) must be at the beginning
{Cube type} 0 28 1 0 0 0 3 5 1 8
 00 0 {normal}
 01 1 {fuel center}
  {value %li} 0 30 2 1 0 0 0 0 1 -1
 02 1 {repair center}
  {value %li} 0 30 2 1 0 0 0 0 1 -1
 03 0 {reactor}
 04 1 {producer}
  {produces} 8 0 4 1 0 0 0 0 1 3
{cube light %L} 0 32 2 2 0 0 0 0 1 -1 * L stands for light 
{avg.p. light %L} 0 -1 0 3 0 0 0 0 -24 -1 
 4 0 56  8 2 * 0=cube, 40=wall[0], 8=corner 0 light, length 2
 4 0 56 14 2 * 0=cube, 40=wall[0],14=corner 1 light, length 2
 4 0 56 20 2 * 0=cube, 40=wall[0],20=corner 2 light, length 2
 4 0 56 26 2 * 0=cube, 40=wall[0],26=corner 3 light, length 2
 4 0 60  8 2 * 0=cube, 40=wall[1], 8=corner 0 light, length 2
 4 0 60 14 2 * 0=cube, 40=wall[1],14=corner 1 light, length 2
 4 0 60 20 2 * 0=cube, 40=wall[1],20=corner 2 light, length 2
 4 0 60 26 2 * 0=cube, 40=wall[1],26=corner 3 light, length 2
 4 0 64  8 2 * 0=cube, 40=wall[2], 8=corner 0 light, length 2
 4 0 64 14 2 * 0=cube, 40=wall[2],14=corner 1 light, length 2
 4 0 64 20 2 * 0=cube, 40=wall[2],20=corner 2 light, length 2
 4 0 64 26 2 * 0=cube, 40=wall[2],26=corner 3 light, length 2
 4 0 68  8 2 * 0=cube, 40=wall[3], 8=corner 0 light, length 2
 4 0 68 14 2 * 0=cube, 40=wall[3],14=corner 1 light, length 2
 4 0 68 20 2 * 0=cube, 40=wall[3],20=corner 2 light, length 2
 4 0 68 26 2 * 0=cube, 40=wall[3],26=corner 3 light, length 2
 4 0 72  8 2 * 0=cube, 40=wall[4], 8=corner 0 light, length 2
 4 0 72 14 2 * 0=cube, 40=wall[4],14=corner 1 light, length 2
 4 0 72 20 2 * 0=cube, 40=wall[4],20=corner 2 light, length 2
 4 0 72 26 2 * 0=cube, 40=wall[4],26=corner 3 light, length 2
 4 0 76  8 2 * 0=cube, 40=wall[5], 8=corner 0 light, length 2
 4 0 76 14 2 * 0=cube, 40=wall[5],14=corner 1 light, length 2
 4 0 76 20 2 * 0=cube, 40=wall[5],20=corner 2 light, length 2
 4 0 76 26 2 * 0=cube, 40=wall[5],26=corner 3 light, length 2
{neighbour 1} 0 0 2 0 0 0 0 0 0 -1
{neighbour 2} 0 2 2 0 0 0 0 0 0 -1
{neighbour 3} 0 4 2 0 0 0 0 0 0 -1
{neighbour 4} 0 6 2 0 0 0 0 0 0 -1
{neighbour 5} 0 8 2 0 0 0 0 0 0 -1
{neighbour 6} 0 10 2 0 0 0 0 0 0 -1
{point 1} 0 12 2 0 0 0 0 0 0 -1
{point 2} 0 14 2 0 0 0 0 0 0 -1
{point 3} 0 16 2 0 0 0 0 0 0 -1
{point 4} 0 18 2 0 0 0 0 0 0 -1
{point 5} 0 20 2 0 0 0 0 0 0 -1
{point 6} 0 22 2 0 0 0 0 0 0 -1
{point 7} 0 24 2 0 0 0 0 0 0 -1
{point 8} 0 26 2 0 0 0 0 0 0 -1
{door 1} 0 34 1 0 0 0 0 0 2 -1
{door 2} 0 35 1 0 0 0 0 0 2 -1
{door 3} 0 36 1 0 0 0 0 0 2 -1
{door 4} 0 37 1 0 0 0 0 0 2 -1
{door 5} 0 38 1 0 0 0 0 0 2 -1
{door 6} 0 39 1 0 0 0 0 0 2 -1

:Side 7
{texture 1} 1 0 2 0 0 0 0 0 1 1
{texture 2} 1 2 2 1 0 0 0 0 1 1
{origin for t2} 1 -1 0 2 0 0 0 4 1 7
 0 0 {lower left}
 1 0 {lower right}
 2 0 {upper right}
 3 0 {upper left}
{avg.p. light %L} 1 -1 0 3 0 0 0 0 -4 -1 
 3 1 8  2 * 1. side effect is in 01=side, offset  8=corner 0 light,length 2
 3 1 14 2 * 2. side effect is in 01=side, offset 14=corner 1 light,length 2
 3 1 20 2 * 3. side effect is in 01=side, offset 20=corner 2 light,length 2
 3 1 26 2 * 4. side effect is in 01=side, offset 26=corner 3 light,length 2
{corner 0} 1 4 6 0 0 0 0 0 0 -1
{corner 1} 1 10 6 0 0 0 0 0 0 -1
{corner 2} 1 16 6 0 0 0 0 0 0 -1
{corner 3} 1 22 6 0 0 0 0 0 0 -1

:Point 6
{xpos % C} 9 0 8 0 0 0 0 0 1 4 * ' ' means do not change in normal way
{ypos % C} 9 8 8 1 0 0 0 0 1 4 * C stands for coordinate
{zpos % C} 9 16 8 2 0 0 0 0 1 4 * which means double/65536.0
{txt-x %.5li} 2 0 2 3 0 0 0 0 1 -1
{txt-y %.5li} 2 2 2 4 0 0 0 0 1 -1
{light %L} 2 4 2 5 0 0 0 0 1 -1

:Thing 11
{type} 3 0 1 0 0 0 6 6 1 0
 02 11 {robot}
  {robot type} 3 1 1 1 0 0 0 24 1 -1
   00 0 {medium hulk}
   01 0 {medium lifter}
   02 0 {spider}
   03 0 {class 1 drone}
   04 0 {class 2 drone}
   05 0 {invisible vulcan}
   06 0 {invisible hulk}
   07 0 {supervisor}
   08 0 {secondary lifter}
   09 0 {heavy driller}
   0a 0 {gopher, laser}
   0b 0 {platform, laser}
   0c 0 {platform, missile}
   0d 0 {red triangle}
   0e 0 {baby spider}
   0f 0 {miniboss}
   10 0 {heavy hulk}
   11 0 {big boss 1}
   12 0 {invisible lifter}
   13 0 {vulcan man}
   14 0 {light hulk}
   15 0 {advanced lifter}
   16 0 {defense proto}
   17 0 {big boss 2}
  {drop type} 3 76 1 2 0 0 2 4 1 -1
   00 0 {nothing ??}
   ff 0 {random ??}
   02 2 {robot}
    {drop what} 3 77 1 3 0 0 0 4 1 -1
     03 0 {!thing} * start with list for things
     00 0 {>type} * search for offset 0
     02 0 {#robot} * search for no.7
     01 0 {!robot type} * search for offset 1 (must be at the end)
    {drop num %.3ld} 3 78 1 4 0 0 0 0 1 -1
   07 2 {item}
    {drop what} 3 77 1 3 0 0 0 4 1 -1
     03 0 {!thing} * start with list for things
     00 0 {>type} * search for offset 0
     07 0 {#item} * search for no.7
     01 0 {!item type} * search for offset 1 (must be at the end)
    {drop num %.3ld} 3 78 1 4 0 0 0 0 1 -1
  {behaviour} 3 143 1 7 0 0 0 6 1 -1
   80 0 {sits still}
   81 0 {normal}
   82 0 {hide (won't work)}
   83 0 {drop mines}
   84 0 {path (won't work)}
   85 0 {station}
  {texture} 3 235 4 6 0 0 0 0 1 12
  {ai flags} 3 144 11 0 0 0 0 0 0 -1
  {hide cubenum} 3 155 2 0 0 0 0 0 0 -1
  {hide index} 3 157 2 0 0 0 0 0 0 -1
  {path length} 3 159 2 0 0 0 0 0 0 -1
  {path pos} 3 161 2 0 0 0 0 0 0 -1
  {path start} 3 163 2 0 0 0 0 0 0 -1
  {path end} 3 165 2 0 0 0 0 0 0 -1
 03 1 {hostage}
  {no.: %.2lx} 3 1 1 1 0 0 0 0 1 -1
 04 1 {start}
  {no.: %.2lx} 3 1 1 1 0 0 0 0 1 -1
 07 2 {item}
  {item type} 3 1 1 1 0 0 0 22 1 5
   00 0 {extra life}
   01 0 {energy boost}
   02 0 {shield boost}
   03 0 {laser} 
   04 0 {blue key}
   05 0 {red key}
   06 0 {yellow key}
   0a 0 {1 concussion} 
   0b 0 {4 concussions}
   0c 0 {quad laser}
   0d 0 {vulcan cannon}
   0e 0 {spreadfire}
   0f 0 {plasma cannon}
   10 0 {fusion cannon}
   11 0 {proximity bombs}
   12 0 {1 homing}
   13 0 {4 homings}
   14 0 {smart missile}
   15 0 {mega missile}
   16 0 {vulcan ammo}
   17 0 {cloaking dev}
   19 0 {invulnerability}
  {graphics} 3 83 4 2 0 0 0 23 1 -1
   12 0 {energy boost} *must be the same name as in itemtype
   13 0 {shield boost}
   14 0 {laser}
   18 0 {blue key}
   19 0 {yellow key}
   1a 0 {red key}
   21 0 {hostage}
   22 0 {1 concussion}
   23 0 {4 concussions}
   24 0 {extra life}
   25 0 {vulcan cannon}
   26 0 {spreadfire}
   27 0 {plasma cannon}
   28 0 {fusion cannon}
   29 0 {proximity bombs}
   2a 0 {1 homing}
   2b 0 {4 homings}
   2c 0 {smart missile}
   2d 0 {mega missile}
   2e 0 {vulcan ammo}
   2f 0 {cloaking dev}
   31 0 {invulnerability}
   33 0 {quad laser}
 09 1 {reactor}
  {texture} 3 147 4 1 0 0 0 0 1 12 
 0e 1 {coop start}
  {no.: %.2lx} 3 1 1 1 0 0 0 0 1 -1
{size %ld} 3 56 4 8 0 0 0 0 0 -1
{shield %ld} 3 60 4 9 0 0 0 0 0 -1
{controltype} 3 2 1 0 0 0 0 0 2 -1
{movementtype} 3 3 1 0 0 0 0 0 2 -1
{rendertype} 3 4 1 0 0 0 0 0 2 -1
{flags} 3 5 1 0 0 0 0 0 2 -1
{cube} 3 6 2 0 0 0 0 0 0 -1
{pos} 3 8 12 0 0 0 0 0 0 -1
{orientation} 3 20 36 0 0 0 0 0 0 -1
{lastpos} 3 64 12 0 0 0 0 0 0 -1
  
:Wall 8
{wall-type} 4 16 1 0 0 0 2 5 -1 9 * 2 child., 5 descr., 1 se, extra se no. 9
 5 4 24 12 16 1 * in 4=door, 24=corr. door, 12=node, 16=wall-type 1=length
 01 1 {blow door}
  {animation} 4 20 1 7 0 0 0 0 1 6
 02 4 {normal door}
  {animation} 4 20 1 7 0 0 0 0 1 6
  {open-type} 4 17 1 1 0 0 0 4 1 -1
   00 0 {stays open, laser}
   08 0 {stays open, switch}
   10 0 {open/close w. laser}
   18 0 {open/close w. switch}
  {open at end} 4 28 1 2 0 0 0 2 1 -1
   00 0 {don't open at end}
   01 0 {open at end}
  {key} 4 21 1 3 0 0 0 4 -1 -1
   5 4 24 12 21 1 * in 4=door, 24=corr. door, 12=node, 21=key, 1=length
   01 0 {no key at all}
   02 0 {blue key}
   04 0 {red key}
   08 0 {yellow key}
 05 0 {shoot through}
 03 0 {only texture}
 04 0 {nothing but switch}
{switchtype} 7 0 4 4 0 0 2 5 1 2
	0 0 {no switch}
 00010000 0 {alternate exit}
 00000800 0 {normal exit}
 00004000 1 {producer}
  {switches % ld} 7 12 2 5 0 0 0 0 1 -1
 00000100 1 {open door}
  {switches % ld} 7 12 2 5 0 0 0 0 1 -1
{hitpoints %li} 4 10 2 6 0 0 0 0 1 -1
{texture 1} 4 -1 0 8 0 0 0 0 1 10
{texture 2} 4 -1 0 9 0 0 0 0 1 11
{cube-num} 4 0 4 0 0 0 0 0 0 -1
{side-num} 4 4 4 0 0 0 0 0 0 -1
{switch-no} 4 19 1 0 0 0 0 0 0 -1

:Internal 20
{Zoom %10.2f} 5 0 8 0 0 0 0 0 1 -1
{ZoomS %10.3f} 5 8 8 1 0 0 0 0 1 -1
{Visib. %10.3C} 5 16 8 2 0 0 0 0 1 -1
{VisiS. %10.3f} 5 24 8 3 0 0 0 0 1 -1
{Movef. %10.3C} 5 32 8 4 0 0 0 0 1 -1
{PMovef. %9.3C} 5 40 8 5 0 0 0 0 1 -1
{MoveS. %10.3f} 5 48 8 6 0 0 0 0 1 -1
{Angel %10.3D} 5 56 8 7 0 0 0 0 1 -1
{PAngel %9.3D} 5 64 8 8 0 0 0 0 1 -1
{AngelS %9.3f} 5 72 8 9 0 0 0 0 1 -1
{Grid %10.4C} 5 80 8 10 0 0 0 0 1 -1
{GridS %10.4f} 5 88 8 11 0 0 0 0 1 -1
{ConnD. %9.4C} 5 96 8 12 0 0 0 0 1 -1
{UConn. %9.4C} 5 104 8 12 0 0 0 0 1 -1
{clickangle %5.3f} 5 112 8 13 0 0 0 0 1 -1
{thingsize %6.4C} 5 120 8 14 0 0 0 0 1 -1
{door bend %6.4C} 5 128 8 15 0 0 0 0 1 -1
{xpos %C} 5 136 8 16 0 0 0 0 1 -1
{ypos %C} 5 144 8 17 0 0 0 0 1 -1
{zpos %C} 5 152 8 18 0 0 0 0 1 -1
 
:TxtNames
{rock metl brig lava exit ceil empty fram arw fan ctrl blown misc mntr wall
 door}
{wall door}

:NormalTxt 266 * decimal numbers (not octal,the zeros are just for fun)
000 001 003 -06 154 162 163 164 165 167 168 169 170 -172 45 -219 15 237
238 -240 04 -256 07 -270 07 290 291 301 315 316 322 -332 05 339 340 356

:ExtraTxt 89
245 -247 08 -264 05 -278 10 -292 08 -302 12 -317 04 323 326 327 330 331
338 -341 14 -357 13

:WNormalTxt 115
218 235 236 239 289 328 -371 04 -413 10 -436 07 -486 63 -563 20

:WExtraTxt 108
246 324 325 329 -376 36 -424 11 -444 41 -550 12

:DoorStarts 25
23
 371 -376    0 -387 -399  413  419 -424    0  436
-444 -459 -472  486  492  500  508  515  521  529 
 536  543 -550  563  570  577
 
:MacroGroups 5
 0 0 {Others}
 0 0 {Single cubes}
 0 0 {Corridors}
 0 0 {Intersections}
 0 0 {Rooms}

** SHAREWARE TEXTURES
:STxtNames
{rock metl brig exit ceil empty fram arw fan ctrl blown misc mntr door}
{door}

:SNormalTxt 134 * decimal numbers (not octal,the zeros are just for fun)
000 001 003 006 008 010 011 012 013 014 016 017 022 023 024 025 031 038
040 042 045 046 047 048 049 051 052 053 056 058 059 060 061 062 065 066
067 068 070 071 073 074 075 076 077 081 082 083 085 086 087 088 090 091
092 094 095 098 099 102 106 107 108 113 116 120 123 126 127 129 130 133
135 142 143 145 146 149 150 151 152 156 161 162 163 164 165 166 170 171
172 176 178 179 181 186 188 191 192 194 204 206 207 208 209 210 212 213
214 215 220 221 226 229 241 256 257 258 259 260 261 262 270 271 272 273
274 275 276 315 316 322 333 339

:SExtraTxt 66
250 251 252 253 254 255 264 266 268 269 278 279 281 282 283 284 285
286 287 288 289 293 297 299 300 302 305 308 312 313 314 319 321 323 324
326 327 335 338 341 342 343 344 345 346 347 348 349 350 352 353 355 357
358 359 360 361 362 363 364 365 366 367 368 369 370 

:SWNormalTxt 9
219 328 446 453 462 468 476 486 494

:SWExtraTxt 8
246 329 372 383 395 410 417 429 
